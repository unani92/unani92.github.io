<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-05-26T00:03:22+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Unani의 테크 블로그</title><subtitle>장고, 자바스크립트, 알고리즘 TIL 블로그입니다.</subtitle><author><name>Yoonhwan Jung</name><email>unani9292@gmail.com</email></author><entry><title type="html">Axios 라이브러리를 통한 비동기처리 방식</title><link href="http://localhost:4000/javascript/axios-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC%EB%A5%BC-%ED%86%B5%ED%95%9C-%EB%B9%84%EB%8F%99%EA%B8%B0%EC%B2%98%EB%A6%AC-%EB%B0%A9%EC%8B%9D/" rel="alternate" type="text/html" title="Axios 라이브러리를 통한 비동기처리 방식" /><published>2020-05-25T00:00:00+09:00</published><updated>2020-05-25T00:00:00+09:00</updated><id>http://localhost:4000/javascript/axios%20%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC%EB%A5%BC%20%ED%86%B5%ED%95%9C%20%EB%B9%84%EB%8F%99%EA%B8%B0%EC%B2%98%EB%A6%AC%20%EB%B0%A9%EC%8B%9D</id><content type="html" xml:base="http://localhost:4000/javascript/axios-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC%EB%A5%BC-%ED%86%B5%ED%95%9C-%EB%B9%84%EB%8F%99%EA%B8%B0%EC%B2%98%EB%A6%AC-%EB%B0%A9%EC%8B%9D/">&lt;h2 id=&quot;index--비동기-처리란-무엇인가&quot;&gt;Index : 비동기 처리란 무엇인가?&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;정의 : 특정 코드의 연산이 끝날 때까지 코드의 실행을 멈추지 않고 다음 코드를 먼저 실행하는 자바스크립트의 처리&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;이것은-왜-필요한가&quot;&gt;이것은 왜 필요한가?&lt;/h4&gt;
&lt;p&gt;이렇듯 특정 로직의 실행이 끝날 때까지 기다려주지 않고 나머지 코드를 먼저 실행하는 일은 브라우저에서 효율적인 작업을 위해 필요하다. 이해를 위해 일상적인 사례를 비유로 들어보자&lt;/p&gt;

&lt;h5 id=&quot;오늘-저녁에-할-일&quot;&gt;오늘 저녁에 할 일&lt;/h5&gt;
&lt;ol&gt;
  &lt;li&gt;거래처에 이메일 보내기
    &lt;ul&gt;
      &lt;li&gt;이메일 답장 확인하기&lt;/li&gt;
      &lt;li&gt;회신 보내기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;저녁식사하기&lt;/li&gt;
  &lt;li&gt;부모님께 전화걸기
    &lt;ul&gt;
      &lt;li&gt;전화를 받지 않을 경우 문자로 안부 물어보기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;잠자기&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;오늘 할 일이 4가지 있다고 가정해보자. 동기처리만 존재하고 비동기처리가 없는 세상이라면 일처리는 1번부터 4번까지 순차적으로만 이뤄질 것이다. 문제는 여기서 발생한다.&lt;/p&gt;

&lt;p&gt;이메일을 보내는 일이 1번이지만 이메일은 보내면 바로 답장이 오지 않는다. 그렇다면 답장 확인이 불가하고 회신을 보낼 수도 없다. 그러면 저녁은 언제 먹지??? 하는 문제가 발생하고 &lt;strong&gt;오늘 안에 답장을 보내지 못하면 잠도 못자는 상황이 발생&lt;/strong&gt;할 것이다. 답장이 빨리 와서 회신을 하고 저녁을 먹었다. 그런데 &lt;strong&gt;부모님이 전화를 받지 않으신다.&lt;/strong&gt; 그렇다면 오늘 잠은 다 잤다고 봐야된다.&lt;/p&gt;

&lt;p&gt;비동기처리는 이러한 문제를 해결하기 위한 처리방식이다. 현실세계에서는 이메일을 보내놓고 다른 일을 처리한다. 비동기세계에서도 마찬가지이다. &lt;strong&gt;이메일을 보내놓고 저녁식사를 한다.&lt;/strong&gt; 저녁식사를 하던 중 &lt;strong&gt;답장이 오면 이를 확인하고 회신&lt;/strong&gt;까지 보낼 수 있다. 이후 일처리도 마찬가지이다. 이러한 비동기처리 방식이 적용되면 우리는 이메일이 오지 않고 부모님이 전화를 받지 않더라도 잠자기까지 무리없이 진행할 수 있다. 이것이 비동기처리의 장점이다.&lt;/p&gt;

&lt;h2 id=&quot;promise-객체란-무엇인가&quot;&gt;promise 객체란 무엇인가?&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;정의 : 비동기 작업이 맞이할 미래의 완료 또는 실패와 그 결과 값을 나타내기 위한 객체(출처 : MDN)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;비동기처리 방식은 &lt;strong&gt;DB에서 데이터를 불러오거나 API에서 데이터를 불러오는 일&lt;/strong&gt;과 같이 시간이 걸리지만 다 끝날 때 까지 마냥 기다리고 있기에는 비효율적인 상황을 효율적으로 해결하는 데 유용한 방식이라고 설명하였다. 따라서 이러한 상황의 성공 혹은 실패 시에 어떠한 행동을 이어 할지에 대해 정의해 주어야 한다. 이를 위해 promise 객체가 존재한다. 따라서 promise 객체는 다음과 같이 구성된다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;대기 : &lt;code class=&quot;highlighter-rouge&quot;&gt;get / post&lt;/code&gt; 요청을 보내 놓고 이행하거나 거부되지 않은 초기 상태.&lt;/li&gt;
  &lt;li&gt;이행(&lt;code class=&quot;highlighter-rouge&quot;&gt;.then()&lt;/code&gt;) : 연산이 성공적으로 완료되었을 때&lt;/li&gt;
  &lt;li&gt;거부 (&lt;code class=&quot;highlighter-rouge&quot;&gt;.catch()&lt;/code&gt;): 연산이 실패한 상태&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;axios 라이브러리&lt;/strong&gt;는 이러한 promise 객체를 쉽고 편하게 만들기 위해 존재한다.&lt;/p&gt;

&lt;h2 id=&quot;axios-라이브러리-사용하기&quot;&gt;axios 라이브러리 사용하기&lt;/h2&gt;

&lt;h3 id=&quot;라이브러리-로드하기&quot;&gt;라이브러리 로드하기&lt;/h3&gt;
&lt;p&gt;axios 라이브러리는 cdn 로딩을 통해 쉽게 사용할 수 있다. 구글에 &lt;code class=&quot;highlighter-rouge&quot;&gt;axios cdn&lt;/code&gt; 을 검색한다. 깃허브 리드미 공식문서를 확인하면 cdn이 있는데 jsdelivr, unpkg 중 하나 아무거나 가져다 써도 상관 없다.&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://unpkg.com/axios/dist/axios.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;get-요청-보내보기&quot;&gt;get 요청 보내보기&lt;/h3&gt;
&lt;p&gt;자바스크립트에서의 비동기처리는 주로 &lt;strong&gt;API 통신, DB와의 통신을 위한 GET/POST 요청&lt;/strong&gt;에 활용된다. 이번 예시에서는 강아지 사진 API(https://dog.ceo/api/breeds/image/random)를 활용한 이미지 요청을 구현할 것이다.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dog&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;강아지&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dogs&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;버튼을 누르면 API 요청을 보내 이미지를 가져와 dogs 클래스를 가진 div 박스 안에 랜덤 강아지 사진을 추가해 주는 프로그램을 구현할 것이다. 로직을 정리하면 다음과 걑다.&lt;/p&gt;

&lt;h3 id=&quot;버튼을-눌렀을-때&quot;&gt;버튼을 눌렀을 때&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;axios 사용해 서버에서 데이터 요청&lt;/li&gt;
  &lt;li&gt;받은 데이터를 담을 img 노드 하나 생성(createElement)&lt;/li&gt;
  &lt;li&gt;setAttribute(src, url 삽입)&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;구현하기&quot;&gt;구현하기&lt;/h3&gt;
&lt;p&gt;버튼과 API url을 다음과 같이 변수 할당을 해 주었다.&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;#dog&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://dog.ceo/api/breeds/image/random&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;axios-get&quot;&gt;axios GET&lt;/h4&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getDogImages&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;axios&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;우선 url에 &lt;code class=&quot;highlighter-rouge&quot;&gt;get&lt;/code&gt; 요청을 보내 axios 함수를 통해 &lt;code class=&quot;highlighter-rouge&quot;&gt;promise&lt;/code&gt; 객체를 만들어준다. 객체가 어떻게 생겼는지 알아보자&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getDogImages&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;axios&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getDogImages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;promise-객체-구성요소-알아보기&quot;&gt;promise 객체 구성요소 알아보기&lt;/h4&gt;
&lt;p&gt;버튼 클릭 시 다음과 같은 json이 출력된다. 
&lt;img width=&quot;1049&quot; alt=&quot;스크린샷 2020-05-24 오전 1 06 48&quot; src=&quot;https://user-images.githubusercontent.com/53211781/82820040-6b650e00-9edc-11ea-9086-734ed17a00bd.png&quot; /&gt;
이미지 출력을 위해서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;data.message&lt;/code&gt;에 담겨 있는 url이 필요하다는 것을 알 수 있다.&lt;/p&gt;

&lt;h4 id=&quot;비동기처리-함수-구현하기&quot;&gt;비동기처리 함수 구현하기&lt;/h4&gt;
&lt;p&gt;그렇다면 다음과 같은 코드를 완성할 수 있다.&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getDogImages&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;axios&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;imgURL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dogImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;dogImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;imgURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;dogImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;300px&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.dogs&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dogImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getDogImages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;프로세스-요약하기&quot;&gt;프로세스 요약하기&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;url을 통해 get 요청을 보내 promise 객체를 만든다.&lt;/li&gt;
  &lt;li&gt;url 요청이 성공적으로 이뤄진다면 then() 내부의 콜백을 실행한다.
    &lt;ul&gt;
      &lt;li&gt;promise 객체 내부에서 img url을 추출한다.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;createElement('img')&lt;/code&gt;를 통해 img 태그를 생성산다.&lt;/li&gt;
      &lt;li&gt;태그에 src 속성과 style 속성을 정의해준다.&lt;/li&gt;
      &lt;li&gt;사전에 만들어 두었던 div 박스 노드를 불러와 img태그를 자식으로 넣어준다.(&lt;code class=&quot;highlighter-rouge&quot;&gt;appendChild()&lt;/code&gt;)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;버튼을 눌러 비동기 요청이 제대로 이뤄지는지 확인한다.
&lt;img width=&quot;1133&quot; alt=&quot;스크린샷 2020-05-24 오전 1 18 30&quot; src=&quot;https://user-images.githubusercontent.com/53211781/82820090-80da3800-9edc-11ea-8c15-f7ad902f5a72.png&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Yoonhwan Jung</name><email>unani9292@gmail.com</email></author><summary type="html">Javascript</summary></entry></feed>